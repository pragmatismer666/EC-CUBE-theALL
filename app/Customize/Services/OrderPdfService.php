<?php

namespace Customize\Services;

use Customize\Entity\Shop;
use Eccube\Common\EccubeConfig;
use Eccube\Repository\BaseInfoRepository;
use Eccube\Repository\OrderRepository;
use Eccube\Repository\ShippingRepository;
use Eccube\Service\TaxRuleService;
use Eccube\Twig\Extension\EccubeExtension;
use Eccube\Twig\Extension\TaxExtension;

class OrderPdfService extends \Eccube\Service\OrderPdfService
{
    /**
     * @var Shop
     */
    protected $Shop;

    /**
     * @var \Eccube\Common\EccubeConfig
     */
    protected $elevated_eccubeConfig;

    public function __construct(
        EccubeConfig $eccubeConfig,
        OrderRepository $orderRepository,
        ShippingRepository $shippingRepository,
        TaxRuleService $taxRuleService,
        BaseInfoRepository $baseInfoRepository,
        EccubeExtension $eccubeExtension,
        TaxExtension $taxExtension
    ) {
        parent::__construct(
            $eccubeConfig,
            $orderRepository,
            $shippingRepository,
            $taxRuleService,
            $baseInfoRepository,
            $eccubeExtension,
            $taxExtension
        );
        $this->elevated_eccubeConfig = $eccubeConfig;
    }

    public function makePdf(array $formData)
    {
        if (!$formData['ids']) {
            return false;
        }

        $ids = explode(',', $formData['ids']);

        foreach($ids as $id) {
            $Shipping = $this->shippingRepository->find($id);
            if (!$Shipping) {
                continue;
            }

            /** @var \Eccube\Entity\Order $Order */
            $Order = $Shipping->getOrder();
            $Shop = $Order->getShop();

            if (!$Shop) {
                continue;
            }

            $this->Shop = $Shop;

            break;
        }
        return parent::makePdf($formData); // TODO: Change the autogenerated stub
    }

    /**
     * PDFに店舗情報を設定する
     * ショップ名、ロゴ画像以外はdtb_helpに登録されたデータを使用する.
     */
    protected function renderShopData()
    {
        if (!$this->Shop) {
            return parent::renderShopData();
        }
        // 基準座標を設定する
        $this->setBasePosition();

        // ショップ名
        $this->lfText(125, 60, $this->Shop->getCompanyName() ?? $this->Shop->getName(), 8, 'B');

        // 都道府県+所在地
        $text = $this->Shop->getPref().$this->Shop->getAddr01();
        $this->lfText(125, 65, $text, 8);
        $this->lfText(125, 69, $this->Shop->getAddr02(), 8);

        // メールアドレス
        if (strlen($this->Shop->getOrderMail()) > 0) {
            $text = 'Email: '.$this->Shop->getOrderMail();
            $this->lfText(125, 75, $text, 8); // Email
        }

        $logoFile = $this->elevated_eccubeConfig->get('eccube_save_image_dir').'/'.$this->Shop->getLogoPath();

        if (!file_exists($logoFile)) {
            $logoFile = $this->elevated_eccubeConfig->get('eccube_html_admin_dir').'/assets/pdf/logo.png';
        }

        list($width, $height) = getimagesize($logoFile);
        list($resizedWidth, $resizedHeight) = $this->getScaledSize($width, $height);

        $this->Image($logoFile, 125, 42, $resizedWidth, $resizedHeight);
    }

    protected function getScaledSize($width, $height)
    {
        $maxWidth = 40;
        $maxHeight = 10;
        if ($width === 0 || $height === 0) {
            return [0, 0];
        }

        $horizontalScale = $width / $maxWidth;
        $verticalScale = $height / $maxHeight;

        $scale = max($horizontalScale, $verticalScale);

        return [$width / $scale, $height / $scale];
    }
}
